{"ast":null,"code":"var _jsxFileName = \"/home/wayne/phase-4-project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check for existing session on initial load\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('tasktrail_user'));\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // In a real app, you would make an API call here\n      // const response = await api.post('/auth/login', { email, password });\n      // const user = response.data;\n\n      // Mock user for development\n      const mockUsers = [{\n        id: 1,\n        name: 'Wayne Travis',\n        email: 'wayne@example.com',\n        role: 'project_manager'\n      }, {\n        id: 2,\n        name: 'Sarah Johnson',\n        email: 'sarah@example.com',\n        role: 'team_lead'\n      }, {\n        id: 3,\n        name: 'Mike Chen',\n        email: 'mike@example.com',\n        role: 'developer'\n      }, {\n        id: 4,\n        name: 'Emily Rodriguez',\n        email: 'emily@example.com',\n        role: 'designer'\n      }];\n      const user = mockUsers.find(u => u.email === email);\n      if (!user) {\n        throw new Error('Invalid email or password');\n      }\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setCurrentUser(user);\n      localStorage.setItem('tasktrail_user', JSON.stringify(user));\n      return user;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('tasktrail_user');\n    navigate('/signin');\n  };\n  const value = {\n    currentUser,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"4XW06Xv3Wo+INaDFXZmN4cjHv/s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","navigate","user","JSON","parse","localStorage","getItem","login","email","password","mockUsers","id","name","role","find","u","Error","Promise","resolve","setTimeout","setItem","stringify","error","console","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wayne/phase-4-project/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check for existing session on initial load\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('tasktrail_user'));\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      // In a real app, you would make an API call here\n      // const response = await api.post('/auth/login', { email, password });\n      // const user = response.data;\n      \n      // Mock user for development\n      const mockUsers = [\n        { id: 1, name: 'Wayne Travis', email: 'wayne@example.com', role: 'project_manager' },\n        { id: 2, name: 'Sarah Johnson', email: 'sarah@example.com', role: 'team_lead' },\n        { id: 3, name: 'Mike Chen', email: 'mike@example.com', role: 'developer' },\n        { id: 4, name: 'Emily Rodriguez', email: 'emily@example.com', role: 'designer' }\n      ];\n      \n      const user = mockUsers.find(u => u.email === email);\n      \n      if (!user) {\n        throw new Error('Invalid email or password');\n      }\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      setCurrentUser(user);\n      localStorage.setItem('tasktrail_user', JSON.stringify(user));\n      return user;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('tasktrail_user');\n    navigate('/signin');\n  };\n\n  const value = {\n    currentUser,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!currentUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}