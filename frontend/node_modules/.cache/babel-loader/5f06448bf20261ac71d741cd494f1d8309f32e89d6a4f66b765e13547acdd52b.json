{"ast":null,"code":"var _jsxFileName = \"/home/wayne/phase-4-project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing session on initial load\n  useEffect(() => {\n    const user = localStorage.getItem('currentUser');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n  const login = (email, password) => {\n    // In a real app, you would make an API call to your backend\n    // For demo purposes, we'll use mock data\n    const mockUser = {\n      id: 1,\n      name: 'Demo User',\n      email: email,\n      role: 'user'\n    };\n    setCurrentUser(mockUser);\n    localStorage.setItem('currentUser', JSON.stringify(mockUser));\n    return {\n      success: true\n    };\n  };\n  const signup = async (name, email, password) => {\n    // In a real app, you would make an API call to your backend\n    // For demo purposes, we'll just create a user object\n    const newUser = {\n      id: Date.now(),\n      name,\n      email,\n      role: 'user'\n    };\n    setCurrentUser(newUser);\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n    return {\n      success: true\n    };\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","email","password","mockUser","id","name","role","setItem","stringify","success","signup","newUser","Date","now","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wayne/phase-4-project/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing session on initial load\n  useEffect(() => {\n    const user = localStorage.getItem('currentUser');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (email, password) => {\n    // In a real app, you would make an API call to your backend\n    // For demo purposes, we'll use mock data\n    const mockUser = {\n      id: 1,\n      name: 'Demo User',\n      email: email,\n      role: 'user'\n    };\n    \n    setCurrentUser(mockUser);\n    localStorage.setItem('currentUser', JSON.stringify(mockUser));\n    return { success: true };\n  };\n\n  const signup = async (name, email, password) => {\n    // In a real app, you would make an API call to your backend\n    // For demo purposes, we'll just create a user object\n    const newUser = {\n      id: Date.now(),\n      name,\n      email,\n      role: 'user'\n    };\n    \n    setCurrentUser(newUser);\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n    return { success: true };\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChD,IAAIF,IAAI,EAAE;MACRH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAClC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA;IACA,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,WAAW;MACjBJ,KAAK,EAAEA,KAAK;MACZK,IAAI,EAAE;IACR,CAAC;IAEDd,cAAc,CAACW,QAAQ,CAAC;IACxBP,YAAY,CAACW,OAAO,CAAC,aAAa,EAAET,IAAI,CAACU,SAAS,CAACL,QAAQ,CAAC,CAAC;IAC7D,OAAO;MAAEM,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAOL,IAAI,EAAEJ,KAAK,EAAEC,QAAQ,KAAK;IAC9C;IACA;IACA,MAAMS,OAAO,GAAG;MACdP,EAAE,EAAEQ,IAAI,CAACC,GAAG,CAAC,CAAC;MACdR,IAAI;MACJJ,KAAK;MACLK,IAAI,EAAE;IACR,CAAC;IAEDd,cAAc,CAACmB,OAAO,CAAC;IACvBf,YAAY,CAACW,OAAO,CAAC,aAAa,EAAET,IAAI,CAACU,SAAS,CAACG,OAAO,CAAC,CAAC;IAC5D,OAAO;MAAEF,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBtB,cAAc,CAAC,IAAI,CAAC;IACpBI,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZzB,WAAW;IACXS,KAAK;IACLU,MAAM;IACNI,MAAM;IACNG,eAAe,EAAE,CAAC,CAAC1B;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAChC,GAAA,CA7DWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA+DzB,eAAeL,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}